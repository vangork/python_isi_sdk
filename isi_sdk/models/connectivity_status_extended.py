# coding: utf-8

"""
    Isilon SDK

    Isilon SDK - Language bindings for the OneFS API  # noqa: E501

    OpenAPI spec version: 22
    Contact: sdk@isilon.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from isi_sdk.configuration import Configuration


class ConnectivityStatusExtended(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'connectivity_dismissed': 'bool',
        'enabled': 'bool',
        'show_migrated': 'bool'
    }

    attribute_map = {
        'connectivity_dismissed': 'connectivity_dismissed',
        'enabled': 'enabled',
        'show_migrated': 'show_migrated'
    }

    def __init__(self, connectivity_dismissed=None, enabled=None, show_migrated=None, _configuration=None):  # noqa: E501
        """ConnectivityStatusExtended - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._connectivity_dismissed = None
        self._enabled = None
        self._show_migrated = None
        self.discriminator = None

        if connectivity_dismissed is not None:
            self.connectivity_dismissed = connectivity_dismissed
        if enabled is not None:
            self.enabled = enabled
        if show_migrated is not None:
            self.show_migrated = show_migrated

    @property
    def connectivity_dismissed(self):
        """Gets the connectivity_dismissed of this ConnectivityStatusExtended.  # noqa: E501

        Whether Dell Technologies connectivity services prompt should be dismissed  # noqa: E501

        :return: The connectivity_dismissed of this ConnectivityStatusExtended.  # noqa: E501
        :rtype: bool
        """
        return self._connectivity_dismissed

    @connectivity_dismissed.setter
    def connectivity_dismissed(self, connectivity_dismissed):
        """Sets the connectivity_dismissed of this ConnectivityStatusExtended.

        Whether Dell Technologies connectivity services prompt should be dismissed  # noqa: E501

        :param connectivity_dismissed: The connectivity_dismissed of this ConnectivityStatusExtended.  # noqa: E501
        :type: bool
        """

        self._connectivity_dismissed = connectivity_dismissed

    @property
    def enabled(self):
        """Gets the enabled of this ConnectivityStatusExtended.  # noqa: E501

        Setting to true or yes will enable Dell Technologies connectivity services. Setting to false or no will disable Dell Technologies connectivity services.  # noqa: E501

        :return: The enabled of this ConnectivityStatusExtended.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ConnectivityStatusExtended.

        Setting to true or yes will enable Dell Technologies connectivity services. Setting to false or no will disable Dell Technologies connectivity services.  # noqa: E501

        :param enabled: The enabled of this ConnectivityStatusExtended.  # noqa: E501
        :type: bool
        """

        self._enabled = enabled

    @property
    def show_migrated(self):
        """Gets the show_migrated of this ConnectivityStatusExtended.  # noqa: E501

        Whether to show if connectivity had been migrated.  # noqa: E501

        :return: The show_migrated of this ConnectivityStatusExtended.  # noqa: E501
        :rtype: bool
        """
        return self._show_migrated

    @show_migrated.setter
    def show_migrated(self, show_migrated):
        """Sets the show_migrated of this ConnectivityStatusExtended.

        Whether to show if connectivity had been migrated.  # noqa: E501

        :param show_migrated: The show_migrated of this ConnectivityStatusExtended.  # noqa: E501
        :type: bool
        """

        self._show_migrated = show_migrated

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConnectivityStatusExtended, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConnectivityStatusExtended):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ConnectivityStatusExtended):
            return True

        return self.to_dict() != other.to_dict()
